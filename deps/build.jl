using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfreetype"], :libfreetype),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaGraphics/FreeTypeBuilder/releases/download/v2.9.1-2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-gnu.tar.gz", "17a1b9fb83c171d7f392748586644711c46d3685a5242730de9ecaaef452423b"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-musl.tar.gz", "9176dca7e1ee3e627be72ed8f9b799cd11c0b9bf1f18ee4a25976daf48a9b467"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-gnueabihf.tar.gz", "b8296acffcd3750865ebbcf1e66aef5441a65622f669645597671176dfa62e22"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-musleabihf.tar.gz", "190a2687c7d3530d8cff9df687560e0970884047117fe3d95f6c4f0cf76f793e"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-gnu.tar.gz", "b056f78a45c40bef893de1ad07da7bf202622e186d0bc1df6c1376afbd38c4d5"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-musl.tar.gz", "28b7d62cfb4636c946fe57eadf78228581af62f3dab2add8801d4f5ce50daddc"),
    Windows(:i686) => ("$bin_prefix/FreeType2.v2.9.1.i686-w64-mingw32.tar.gz", "07d9c388e8c2c3c5beddfe57933e88dde382dc45f374325ab590789031456347"),
    MacOS(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-apple-darwin14.tar.gz", "a2cdb2019bc328b733bce45d70b927c5524fb819aaba8a8b685a3a8c044d748a"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-gnu.tar.gz", "3703475fa9b77fa7eec1c14bdd7e9cd962b4eae81e99ae5edc20779d5824285a"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-musl.tar.gz", "f0f59a45b1ec3a7ab8289789a6812bebc5403e07a2ae58b41acdbf2f4ecf51f2"),
    FreeBSD(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-unknown-freebsd11.1.tar.gz", "7bbcc482c8d2852eb6f36807dc61a681058cac0f3582054664772a0809a5c23d"),
    Windows(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-w64-mingw32.tar.gz", "97b3fa514826e8a84acce5b0dd8733006e4b0276eefa1d729d0a857d79cfe01f"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
