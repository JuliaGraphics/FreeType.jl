using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfreetype"], :libfreetype),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaGraphics/FreeTypeBuilder/releases/download/v2.9.1-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-gnu.tar.gz", "3f5a7c895e5362764d4398d9ed6b2b45311b1709c7aafc46b10e03d168e505ef"),
    Linux(:aarch64, :musl) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-musl.tar.gz", "0af61d8f42c7482d6969d3f35013534471989f9e17e5ef08142fbc1643204f46"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-gnueabihf.tar.gz", "41b26aa8aca9dbfc9272b1dc3e8b67a632198a3505dcc0b4b28b253ae297cd35"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-musleabihf.tar.gz", "67082d464c92cc1a5ebdbbb548cbb5eb8c955d05d01fab15f5322cc08281a185"),
    Linux(:i686, :glibc) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-gnu.tar.gz", "e27e24a13b694dbc2e3ed8a96b486e1ce7dc4bfff048a515998f2abf5316817c"),
    Linux(:i686, :musl) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-musl.tar.gz", "759f2bd5f1f2cd38cda82c6fe2d1d62a3042076212f915a16b95b2def14edd40"),
    Windows(:i686) => ("$bin_prefix/FreeType2.v2.9.1.i686-w64-mingw32.tar.gz", "243fdc5ec1c0c9b26a2c80310bceace166a9e7ec1fec9599404627eb0c20dde2"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/FreeType2.v2.9.1.powerpc64le-linux-gnu.tar.gz", "448b0aeb96d36db0934f031acc13ef0b00c510d39289afd8a8bc97d02ecd3619"),
    MacOS(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-apple-darwin14.tar.gz", "0e1db5bf45ddb182ea326eeb4de4b9c9a3b607ca5a4a41cf026f610be91174c5"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-gnu.tar.gz", "78969a470ee711836120361a1ec96e70e5486c1be4c33799e55e24e07a1a00b9"),
    Linux(:x86_64, :musl) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-musl.tar.gz", "7098d87ddbc1cd26a5c0cb0d4b1e367dd84bc512648457023a2966fa59f69266"),
    FreeBSD(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-unknown-freebsd11.1.tar.gz", "8478e32c147696d6c464d88034f1654d7caf57d566146d10895c122defc79a0f"),
    Windows(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-w64-mingw32.tar.gz", "cce383e04d53b47aa50cdf50702f0e85238417beba701dfd6c68d226edacae22"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key_abi())
    url, tarball_hash = download_info[platform_key_abi()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key_abi())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
